name: Build and Push API & Web

on:
  push:
    branches:
      - develop
      - releases/*
  release:
    types: [published]

concurrency:
  group: build-push-acr-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  ACR_REPO_URL: ${{ secrets.ACR_REPO_URL }}
  ACR_REPO_USER: ${{ secrets.ACR_REPO_USER }}
  ACR_REPO_PASSWORD: ${{ secrets.ACR_REPO_PASSWORD }}
  DIFY_IMAGE_NAME: "mybigpai-registry.cn-beijing.cr.aliyuncs.com/mybigpai/dify"
  DIFY_WEB_IMAGE_TAG: "web"
  DIFY_API_IMAGE_TAG: "api"

jobs:
  build:
    runs-on: self-hosted
    if: github.repository == 'moria97/dify'
    strategy:
      matrix:
        include:
          - service_name: "build-api-amd64"
            image_tag_env: "DIFY_API_IMAGE_TAG"
            context: "api"
            platform: linux/amd64
          - service_name: "build-api-arm64"
            image_tag_env: "DIFY_API_IMAGE_TAG"
            context: "api"
            platform: linux/arm64
          - service_name: "build-web-amd64"
            image_tag_env: "DIFY_WEB_IMAGE_TAG"
            context: "web"
            platform: linux/amd64
          - service_name: "build-web-arm64"
            image_tag_env: "DIFY_WEB_IMAGE_TAG"
            context: "web"
            platform: linux/arm64

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_REPO_URL }}
          username: ${{ env.ACR_REPO_USER }}
          password: ${{ env.ACR_REPO_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DIFY_IMAGE_NAME }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:${{ matrix.context }}"
          platforms: ${{ matrix.platform }}
          build-args: COMMIT_SHA=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.DIFY_IMAGE_NAME }},push-by-digest=false,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ matrix.service_name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service_name }}
          tags: ${{ env.DIFY_IMAGE_NAME }}:${{env[matrix.image_tag_env]}}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.context }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
